import { Checkbox } from '@mui/material';
import React, { useEffect, useState, FormEventHandler } from 'react'
import { useDispatch, useSelector } from 'react-redux';
import { useNavigate, useParams } from 'react-router-dom';
import { AppRootReducerType } from '../../../Bll/store';
import { CardsType, getCards, gradeCards } from '../../PackCard/packsCard-reducer';
import { cardPackType } from '../../packs-reducer';
import s from "./LearnPackModal.module.css";


const grades = ['Did not know', 'Forgot', 'A lot of thought', 'Confused', ' Knew the answer'];

const getCard = (cards: CardsType[]) => {
    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);
    const rand = Math.random() * sum;
    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {
        const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);
        return { sum: newSum, id: newSum < rand ? i : acc.id }
    }
        , { sum: 0, id: -1 });

    return cards[res.id + 1];
}



export const LearnPackModal = () => {

    const dispatch = useDispatch<any>();
    const { cardId } = useParams();

    const [showAnswer, setShowAnswer] = useState<boolean>(false);
    let packs = useSelector<AppRootReducerType, cardPackType[]>((state) => state.packs.cardPacks)
    let cards = useSelector<AppRootReducerType, CardsType[]>((state) => state.cards.cards)

    console.log('cardsS',cards)

    const [card, setCard] = useState<CardsType>({
        _id: 'fake',
        cardsPack_id: '',

        answer: 'answer fake',
        question: 'question fake',
        grade: 0,
        shots: 0,

        created: '',
        updated: '',
        user_id: ''

    });


    console.log('card',card)

    useEffect(() => {
        if (cardId) {
            dispatch(getCards(cardId));

            if (cards.length > 0) setCard(getCard(cards))
            // else { return 'jjjj'}
        }

    }, [cardId, dispatch])

    const navigate = useNavigate();

    const closeModalClick = () => navigate(-1);
    const showAnswerClickHandler = () => setShowAnswer(true);

    let findPack = packs.find(el => el._id === cardId);
    // console.log('findfdPack', findPack)
    let namePack = findPack && findPack.name;

    const nextClickHandler = () => {
        setShowAnswer(false);

        if (cards.length > 0) 
		if (cardId) {
            // dispatch
            setCard(getCard(cards));
			 dispatch(gradeCards(grade, cardId));
        } else {
            
        }

    }
	
	let grade = 3
	
	const onClickRase = () => {
	    //   if (cardId) { 
	     //       dispatch(gradeCards(grade, cardId));
           // }
	}

    const onChangeRase = (e: FormEventHandler<HTMLDivElement>) => {
	    let es =  e
	}




    return (
        <div className={s.learnModal}  >
            <div className={s.modalBlock} >
                <div className={s.learn} >Learn "{`${namePack}`}"</div>
                <div className={s.question} style={{ display: 'flex', alignItems: 'center' }}>
                    <b>Question:</b> "{card.question}"
                </div>
                <div>
                    <button className={s.cancelButton} onClick={closeModalClick}>Cancel</button>
                    <button className={s.showAnswerButton} onClick={showAnswerClickHandler}>Show answer</button>
                </div>
            </div>

            {showAnswer && (
                <div className={s.learnModal}  >
                    <div className={s.modalBlock} style={{ height: '576px', top: '96px' }}>
                        <div className={s.learn} >Learn "{`${namePack}`}"</div>
                        <div className={s.question}>
                            <div>
                                <b>Question:</b> "{card.question}"
                            </div>
                            <div style={{ marginTop: '15px' }} >
                                <b>Answer:</b> "{card.answer}"
                            </div>
                        </div>

                        <div className={s.answerBlock} >
                            <div> <b>Rate yourself: </b></div>
                            {grades.map((g, i) => (
                                <div onChange={onChangeRase} key={'grade-' + i} style={checkBoxBlock} >
                                    <Checkbox  onClick={onClickRase} /> <span style={checkBoxTitle}> {g} </span>
                                </div>
                            ))}
                        </div>

                        <div>
                            <button className={s.cancelButton} onClick={closeModalClick}>Cancel</button>
                            <button className={s.nextButtonAnswer} onClick={nextClickHandler}>Show answer</button>
                        </div>
                    </div>
                </div>
            )
            }
        </div>
    )
};



let checkBoxBlock: React.CSSProperties = {
    position: 'relative',
    marginLeft: '-10px'
}

let checkBoxTitle: React.CSSProperties = {
    position: 'absolute',
    marginTop: '10px'
}